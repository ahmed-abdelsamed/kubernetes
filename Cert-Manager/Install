## Cert-Manager

helm repo add jetstack https://charts.jetstack.io
helm repo update
helm install \
  cert-manager jetstack/cert-manager \
  --namespace cert-manager \
  --create-namespace \
  --version v1.12.0 \
  --set installCRDs=true

 helm list -A

kubectl get pods --namespace cert-manager
kubectl get crds | grep cert-manager
------------

ClusterIssuer.yaml
'
apiVersion: cert-manager.io/v1
kind: ClusterIssuer
metadata:
  name: letsencrypt-staging
spec:
  acme:
    email: ahmed.abdelsamad@linkdev.com
    server: https://acme-staging-v02.api.letsencrypt.org/directory
    privateKeySecretRef:
      name: letsencrypt-staging
    solvers:
    - http01:
        ingress:
          class: nginx
'
--------------------
k describe clusterissuer.cert-manager.io/letsencrypt-staging


----------------------------------------------
## Example
nginx-deployment.yaml
'
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: nginx
  name: nginx
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
      - image: nginx
        name: nginx
'
k expose deploy/nginx --port 80 
-----------------------------
NOTE:
https://acme-v02.api.letsencrypt.org/directory          #production
https://acme-staging-v02.api.letsencrypt.org/directory  # Staging


ingress-resource.yaml

'
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ingress-resource
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-staging
spec:
  ingressClassName: nginx 
  tls:
  - hosts:
    - nginx.example.com
    secretName: letsencrypt-staging
  rules:
  - host: nginx.example.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: nginx
            port:
              number: 80
'
curl -Lk nginx.example.com 
'SSL certificatd '

