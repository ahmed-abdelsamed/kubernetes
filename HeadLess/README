What Is Kubernetes Headless Service (With Examples)?
Headless services are a way to expose a set of endpoints for a service without the need for a load balancer or a single IP address. 
Instead of having a single IP address pointing to a load balancer or a single instance of the service, headless services expose a set of IP addresses for each replica of the service. 
This allows clients to connect directly to the replicas of the service, bypassing the need for a load balancer or a single instance of the service.

Use Cases for Headless Services
1.	Database Clusters: You can use a headless service to deploy a database cluster, with each replica of the database having its own IP address. This allows clients to connect directly to the replicas of the database without having to go through a load balancer or a single instance of the database.
2.	Distributed Storage Systems: Headless services can also be employed to deploy distributed storage systems, such as Ceph or GlusterFS. These systems rely on multiple replicas and endpoints to ensure data durability and high availability.
3.	Messaging Systems: Applications like Apache Kafka or RabbitMQ can benefit from headless services, as they require multiple brokers with individual IP addresses to maintain a distributed and fault-tolerant messaging system.

  ## Mongo STS with Headless

[azchatbot@azure-linkdev ~]$ ks get pods -o wide
NAME           READY  STATUS  RESTARTS  AGE  IP      NODE                 NOMINATED NODE  READINESS GATES
mongo-0          1/1   Running  0     37m 10.244.4.13 aks-stgpoolapp-37294191-vmss000000  <none>      <none>
mongo-1          1/1   Running  0     4m9s 10.244.4.15 aks-stgpoolapp-37294191-vmss000000  <none>      <none>
mongo-2          1/1   Running  0     4m3s 10.244.0.35 aks-nodepoolsys-37834246-vmss000000  <none>      <none>
nginx-0-769f4f94d-pwx77  1/1   Running  0     36m 10.244.4.14 aks-stgpoolapp-37294191-vmss000000  <none>      <none>

[azchatbot@azure-linkdev ~]$ ks get svc
NAME    TYPE    CLUSTER-IP  EXTERNAL-IP  PORT(S)   AGE
mongo-svc  ClusterIP  None     <none>    27017/TCP  36m

# Lookup by service (round robin)
root@nginx-0-769f4f94d-pwx77:/# nslookup mongo-svc
Server: 10.0.0.10
Address: 10.0.0.10#53

Name:  mongo-svc.test-ns.svc.cluster.local
Address: 10.244.4.13
Name:  mongo-svc.test-ns.svc.cluster.local
Address: 10.244.0.35
Name:  mongo-svc.test-ns.svc.cluster.local
Address: 10.244.4.15


## Access service (headless) from outside namespace by FQDN
root@nginx-77b4fdf86c-jshvh:/# nslookup mongo-svc.test-ns.svc.cluster.local
Server:         10.0.0.10
Address:        10.0.0.10#53

Name:   mongo-svc.test-ns.svc.cluster.local
Address: 10.244.0.35
Name:   mongo-svc.test-ns.svc.cluster.local
Address: 10.244.4.15
Name:   mongo-svc.test-ns.svc.cluster.local
Address: 10.244.4.13
